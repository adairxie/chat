#include "TcpServer.h"
#include "EventLoop.h"
#include "InetAddress.h"
#include <stdio.h>
#include <string.h>
char*  rstrip(char * str)
{ 
   int i=strlen(str);	
   str[i]=' ';
   return str;
}


void onConnection(const TcpConnectionPtr& conn)
{
   if( conn->connected())
   {
      printf("onConnection(): new connection [%s] from %s\n",
		      conn->name().c_str(),
		      conn->peerAddress().toHostPort().c_str());
   }
   else
   {
       printf("onConnection(): connection [%s] is down\n",
	       conn->name().c_str());
   }
}


void onMessage(const TcpConnectionPtr& conn,
	Buffer* buf, Timestamp receiveTime)
{
   printf("onMessage(): received %zd bytes from connection [%s] at %s\n",
	   buf->readableBytes(),
	   conn->name().c_str(),
	   receiveTime.toFormattedString().c_str());
   char data[32];
   std::strcpy(data,buf->retrieveAsString().c_str());
   printf("onMessage(): [%s]\n", data);
}


int main()
{
   printf("main(): pid = %d\n",getpid());
   InetAddress listenAddr(9981);
   EventLoop loop;

   TcpServer server(&loop,listenAddr);
   server.setConnectionCallback(onConnection);
   server.setMessageCallback(onMessage);
   server.start();


   loop.loop();
}
