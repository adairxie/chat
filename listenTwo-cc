#include "Acceptor.h"
#include "EventLoop.h"
#include "InetAddress.h"
#include "SocketsOps.h"
#include <stdio.h>
#include "Timestamp.h"
#include <string>
void newConnection1(int sockfd,const InetAddress& peerAddr)
{
  printf("newConnection():Accepted a new connection from %s\n",
	  peerAddr.toHostPort().c_str());
  string str=Timestamp::now().toFormattedString()+"\n";
  ::write(sockfd,str.c_str(),strlen(str.c_str()));
//  sockets::close(sockfd);
}
void newConnection2(int sockfd,const InetAddress& peerAddr)
{
  printf("newConnection():Accepted a new connection from %s\n",
	  peerAddr.toHostPort().c_str());
  ::write(sockfd,"How are you?\n",13);
//  sockets::close(sockfd);
}

int main()
{
  printf("main(): pid = %d\n",getpid());

  InetAddress listenAddr1(9981);
  InetAddress listenAddr2(7749);
  EventLoop loop;

  Acceptor acceptor1(&loop,listenAddr1);
  Acceptor acceptor2(&loop,listenAddr2);

  acceptor1.setNewConnectionCallback(newConnection1);
  acceptor2.setNewConnectionCallback(newConnection2);

  acceptor1.listen();
  acceptor2.listen();

  loop.loop();
}
